# import sys
# sys.stdin = open("input_1865.txt", 'r')


def dfs(x, v):
    # 마지막 사람까지 일 분배 종료 후 100%부터 시작
    if x == N:
        return 100.0
    # dp에 기록된 적이 있다면?
    if dp[x][v] > -1.0:
        return dp[x][v]
        # 확률을 구해뒀으니 반환
    # 일 분배 시작
    for i in range(N):
        # 확률이 0 초과이고 아직 분배하지 않은 파트라면?
        if P[x][i] and not v & 1 << i:
            temp = dfs(x + 1, v | 1 << i) * P[x][i] / 100
            # 분배 후 가장 높은 확률을 반환 받고 확률 계산
            dp[x][v] = max(temp, dp[x][v])  # 가장 높은 확률을 계산
    return dp[x][v]


for tc in range(int(input())):
    N = int(input())
    P = [tuple(map(int, input().split())) for _ in range(N)]
    n_l = 0
    dp = [[-1.0]*(1 << N) for _ in range(N)]  # dp는 말이 안 되는 값 -1.0으로 초기화
    ans = dfs(0, 0)
    # for row in dp:
    #     print(*row)
    print(f"#{tc + 1} {ans:.6f}")


'''
1
16
90 3 16 76 2 86 78 51 77 98 95 8 40 20 9 26
79 40 81 67 0 97 91 78 74 62 83 29 23 65 67 82
70 3 0 62 96 19 9 34 3 9 9 39 72 56 31 38
82 64 96 10 97 20 89 75 49 6 92 87 73 97 65 67
82 65 68 84 75 85 22 28 25 24 95 10 11 64 53 87
33 12 14 1 78 67 75 95 86 38 59 47 52 1 77 24
96 61 37 25 86 95 59 97 99 90 24 88 13 89 83 80
16 20 55 64 5 83 94 96 100 3 68 86 99 97 72 84
94 82 25 99 56 55 20 24 97 19 96 71 80 79 63 20
13 52 14 100 95 64 31 95 70 59 11 95 33 22 13 30
65 66 57 94 59 1 71 71 70 11 17 98 78 72 57 23
82 77 49 77 80 33 60 99 36 38 20 70 46 91 16 67
33 72 12 26 8 73 23 63 88 31 44 89 56 61 9 68
89 44 37 57 30 59 7 49 44 20 40 73 45 45 63 75
86 87 99 52 52 81 91 95 14 11 81 38 83 9 67 51
88 14 84 75 95 63 25 91 67 97 21 31 41 31 37 73

1
3
13 0 50
12 70 90
25 60 100

'''