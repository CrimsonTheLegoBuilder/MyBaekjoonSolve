import matplotlib.pyplot as plt
import numpy as np

# 다각형 데이터 (각각의 그룹을 리스트로 저장 가능)
polygons = {
"p0": [
  [
    (0.000000000000000, 0.000000000000000),
    (10.000000000000000, 0.000000000000000),
    (10.000000000000000, 10.000000000000000),
    (0.000000000000000, 10.000000000000000),
  ],
],
"p1": [
  [
    (3.000000000000000, 5.000000000000000),
    (0.000000000000000, 0.000000000000000),
    (5.500000000000000, 0.000000000000000),
  ],
  [
    (3.000000000000000, 5.000000000000000),
    (5.500000000000000, 10.000000000000000),
    (0.000000000000000, 10.000000000000000),
  ],
  [
    (3.000000000000000, 5.000000000000000),
    (0.000000000000000, 10.000000000000000),
    (0.000000000000000, 0.000000000000000),
  ],
  [
    (3.000000000000000, 5.000000000000000),
    (4.000000000000000, 3.000000000000000),
    (4.000000000000000, 7.000000000000000),
  ],
],
"p2": [
  [
    (7.000000000000000, 5.000000000000000),
    (4.500000000000000, 0.000000000000000),
    (10.000000000000000, 0.000000000000000),
  ],
  [
    (7.000000000000000, 5.000000000000000),
    (10.000000000000000, 0.000000000000000),
    (10.000000000000000, 10.000000000000000),
  ],
  [
    (7.000000000000000, 5.000000000000000),
    (10.000000000000000, 10.000000000000000),
    (4.500000000000000, 10.000000000000000),
  ],
  [
    (7.000000000000000, 5.000000000000000),
    (6.000000000000000, 7.000000000000000),
    (6.000000000000000, 3.000000000000000),
  ],
],
"p3": [
  [
    (4.500000000000000, 0.000000000000000),
    (5.500000000000000, 0.000000000000000),
    (5.000000000000000, 1.000000000000000),
  ],
  [
    (5.000000000000000, 9.000000000000000),
    (5.500000000000000, 10.000000000000000),
    (4.500000000000000, 10.000000000000000),
  ],
],
"p4": [
  [
    (5.000000000000000, 2.000000000000000),
    (0.000000000000000, 0.000000000000000),
    (10.000000000000000, 0.000000000000000),
  ],
  [
    (5.000000000000000, 2.000000000000000),
    (10.000000000000000, 0.000000000000000),
    (10.000000000000000, 7.000000000000000),
  ],
  [
    (5.000000000000000, 2.000000000000000),
    (0.000000000000000, 7.000000000000000),
    (0.000000000000000, 0.000000000000000),
  ],
  [
    (5.000000000000000, 2.000000000000000),
    (6.000000000000000, 3.000000000000000),
    (4.000000000000000, 3.000000000000000),
  ],
],
"p5": [
  [
    (4.583333333333333, 1.833333333333333),
    (0.000000000000000, 0.000000000000000),
    (5.500000000000000, 0.000000000000000),
  ],
  [
    (4.000000000000000, 3.000000000000000),
    (2.625000000000000, 4.375000000000000),
    (0.000000000000000, 0.000000000000000),
    (4.583333333333333, 1.833333333333333),
  ],
  [
    (2.625000000000000, 4.375000000000000),
    (0.000000000000000, 7.000000000000000),
    (0.000000000000000, 0.000000000000000),
  ],
],
"p6": [
  [
    (5.416666666666667, 1.833333333333333),
    (4.500000000000000, 0.000000000000000),
    (10.000000000000000, 0.000000000000000),
  ],
  [
    (6.000000000000000, 3.000000000000000),
    (5.416666666666667, 1.833333333333333),
    (10.000000000000000, 0.000000000000000),
    (7.375000000000000, 4.375000000000000),
  ],
  [
    (7.375000000000000, 4.375000000000000),
    (10.000000000000000, 0.000000000000000),
    (10.000000000000000, 7.000000000000000),
  ],
],
"p7": [
  [
    (4.500000000000000, 0.000000000000000),
    (5.500000000000000, 0.000000000000000),
    (5.000000000000000, 1.000000000000000),
  ],
],
}


def plot_polygons(polygons):
    """
    다각형 리스트를 받아서 각 그룹을 다른 색으로 그리는 함수
    """
    plt.figure(figsize=(10, 10))
    colors = ["black", "red", "green", "yellow", "blue", "magenta", "cyan", "white"]  # 각 그룹별 색 지정
    color_idx = 0

    for name, group in polygons.items():
        # if len(group) == 0:
        #     continue  # 빈 그룹은 건너뜀

        color = colors[color_idx % len(colors)]  # 순환하면서 색상 지정
        color_idx += 1

        for poly in group:
            poly = np.array(poly)  # 리스트를 numpy 배열로 변환
            plt.fill(poly[:, 0], poly[:, 1], color=color, alpha=0.5, edgecolor="black")

    plt.axis("equal")
    plt.grid(True)
    plt.show()


# 다각형 시각화 실행
plot_polygons(polygons)