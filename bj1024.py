import sys

n, m = map(int, sys.stdin.readline().strip().split())

while m <= 100:  # 종료 조건 1. 문제에서 제시된 값.
    # if n % 2 == 1 and m % 2 == 1:  # n과 m이 동시에 홀수이면 무조건 안 될 거라 생각했는데 생각해보니 6 7 8 있음. 폐기
    # m += 1
    # continue
    if n <= m:  # 종료 조건 2. 어떤 구간합보다 큰 간격으로 1씩 증가하는 양의 등차수열을 구할 수는 없다.
        print(-1)
        exit(0)
    else:
        if (n * 2) % m == 0 and n > m:  # 1씩 증가하는 등차수열의 구간합 공식 조건을 만족할 때:
            a_b = (n * 2) // m  # 중앙값
            if m % 2 == 0 and a_b % 2 == 0:  # 구간의 항이 짝수개인데 중앙의 두 값의 합이 짝수인 경우는 존재하지 않는다.
                m += 1
                continue  # 한 번 더!
            if m % 2 == 0:
                f_a = a_b//2 - m//2 + 1  # 항이 짝수개일 때와 홀수개일 때를 따로 고려. 항이 짝수개이면 중앙값이 버림됨. 초항은 += 1
            else:
                f_a = a_b//2 - m//2  # 항이 홀수개이면 양쪽 최대값과 최소값의 합은 짝수이고 중앙값이 살게 됨.
            # f_a = (a_b+0.5)//2 - m//2
            if f_a < 0:  # 그럴 일 없겠지만 혹시라도 계산한 초항이 0보다 작다면
                m += 1
                continue  # 안 돼 돌아가
            ans = [i for i in range(f_a, f_a + m)]  # 구간은 다음과 같다.
            print(*ans)
            exit(0)
        else:
            m += 1

print(-1)  # 종료 조건 3. 모두 돌아봤는데도 만족하는 조건이 없더라.
